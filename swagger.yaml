swagger: "2.0"
info:
  description: "Documentação básica para utilização da api em desenvolvimento da nova versão do BackOffice. Desenvolvido usando o framework PHP Hyperf (https://hyperf.wiki/2.2/#/en/)"
  version: "3.0.0"
  title: "BackOffice API"
  contact:
    email: "rafael.oliveira@onfly.com.br"
tags:
- name: "auth"
  description: "Serviços de autenticação"
- name: "user"
  description: "Serviços de usuários"
schemes: 
- "http"
paths:
  "/auth/":
    post:
      tags:
      - "auth"
      summary: "Executa a autenticação do usuário"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Dados de autenticação do usuário"
        required: true
        schema:
          $ref: "#/definitions/Auth"          
      responses:
        "200":
          description: "autenticado com sucesso"
          schema:
            $ref: "#/definitions/Authenticated"
        "422":
          description: "Os dados enviados são inválidos"
        "400":
          description: "Dados de fornecidos estão incorretos"  
        "404":
          description: "Usuário não encontrado"  
        "500":
          description: "Internal Server Error"
  "/auth/refresh":
    get:
      tags:
      - "auth"
      summary: "Renova o token do usuário"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Token de autorização do usuário"
        required: true
        type: "string"
      responses:
        "200":
          description: "autenticado com sucesso"
          schema:
            $ref: "#/definitions/Authenticated"
        "400":
          description: "Token authentication does not pass"     
        "500":
          description: "Internal Server Error"
  "/auth/logout":
    get:
      tags:
      - "auth"
      summary: "Executa o logout do usuário"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Logout efetuado com sucesso"
          schema:
            $ref: "#/definitions/Logout"
        "500":
          description: "Internal Server Error" 
  "/register":
    post:
      tags:
      - "user"
      summary: "Executa o logout do usuário"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Dados de cadastro de usuário"
        required: true
        schema:
          $ref: "#/definitions/Register" 
      responses:
        "200":
          description: "Usuário cadastrado com sucesso"
          schema:
            $ref: "#/definitions/User"
        "422":
          description: "Os dados enviados são inválidos"    
        "500":
          description: "Internal Server Error"           
definitions:          
  Auth:
    type: "object"
    properties:
      email:
        type: "string"
        example: "teste@teste.com"
      password:
        type: "string"
        example: "123456"
  Authenticated:
    type: "object"
    properties:
      message:
        type: "string"
        example: "success"
      data:
        type: "object"
        $ref: "#/definitions/Token"
  Token:
    type: "object"
    properties:
      token:
        type: "string"
        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUz..."
      exp:
        type: "integer"
        format: "int64"
        example: 7200
  Logout:
    type: "object"
    properties:
      message:
        type: "string"
        example: "Logout efetuado com sucesso"
  User:
    type: "object"
    properties:
      data:
        type: "object"
        $ref: "#/definitions/UserData"
  UserData:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1    
      name:
        type: "string"
        example: "Angelina Jolie da Silva"        
      email:
        type: "string"
        example: "angelina.jolie@teste.com"
      is_active:
        type: "boolean"
        example: "true" 
      is_admin:
        type: "boolean"
        example: "false"         
  Register:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Angelina Jolie da Silva"
      email:
        type: "string"
        example: "angelina.jolie@teste.com"
      password:
        type: "string"
        example: "123456"
      is_active:
        type: "boolean"
        example: "true" 
      is_admin:
        type: "boolean"
        example: "false"         